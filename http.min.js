/*! lil-http - v0.1 - MIT License - https://github.com/lil-js/http */
(function(t){var n=t.lil=t.lil||{};var e=Object.prototype.toString;var r=Array.prototype.slice;function u(t){return t&&e.call(t)==="[object Object]"}function o(t){return typeof t==="function"}function i(t){var n,e,u,o,i=r.call(arguments).slice(1);for(n=0,e=i.length;n<e;n+=1){o=i[n];for(x in o)if(o.hasOwnProperty(x)){t[x]=o[x]}}return t}function f(t,n){var e=new XMLHttpRequest;n=n||"GET";if("withCredentials"in e){e.open(n,t,true)}else if(typeof XDomainRequest!==undefined){e=new XDomainRequest;e.open(n,t)}else{return null}return e}function a(t){var n=false;return function(e){if(!n){t(e||"error");n=true}}}function l(t){return{status:t.status,data:t.responseText||null,headers:t.getAllResponseHeaders(),xhr:t}}function c(t,n){return function(){if(t.readyState===4){if(t.status>=200&&t.status<300){n(null,l(t))}else{n(l(t))}}}}function s(t,n){var e;var r=f(t.url,t.method);if(!r){return}e=a(n);r.onerror=e;r.ontimeout=e;r.onload=c(r,n);r.send(t.data)}function p(t){return function(){var n={method:t};if(u(url)){n=url}}}function d(t,n,e){}d.get=function(t,n){s(t,null,n,"GET")};d.post=function(t,n,e){s(t,n,e,"POST")};d.put=function(t,n,e){s(t,n,e,"PUT")};d.del=function(t,n,e){s(t,n,e,"DELETE")};d.patch=function(t,n,e){s(t,n,e,"PATCH")};d.head=function(t,n){s(t,null,n,"HEAD")};n.http=d})(this);