/*! lil-http - v0.1 - MIT License - https://github.com/lil-js/http */
(function(t){var e="0.1.0";var n=t.lil||{};var r=Object.prototype.toString;var a=Array.prototype.slice;var u=t.location.origin;var i=/^(http[s]?:\/\/[a-z0-9\-\.\:]+)[\/]?/i;var o={method:"GET",timeout:30*1e3,auth:null,headers:null,async:true,withCredentials:false};function s(t){return t&&r.call(t)==="[object Object]"}function f(t){return typeof t==="function"}function c(t){var e,n,r,u,i=a.call(arguments).slice(1);for(e=0,n=i.length;e<n;e+=1){u=i[e];for(r in u)if(u.hasOwnProperty(r)){t[r]=u[r]}}return t}function d(t,e){if(s(e)){for(var n in e){t.setRequestHeader(n,e[n])}}}function p(t){return{status:t.status,data:t.responseText,headers:t.getAllResponseHeaders(),xhr:t}}function h(t,e){var n=p(t);n.error=e;return n}function v(t,e){var n=false;return function(r){if(!n){e(h(t,r),null);n=true}}}function y(t,e){return function(){if(t.readyState===4){if(t.status>=200&&t.status<300){e(null,p(t))}else{e(p(t),null)}}}}function m(t){var e=t.match(i);return e&&e[1]===u}function g(t){var e=null;var n=(t.method||"GET").toUpperCase();var r=t.auth||{};var a=t.url;if(m(a)){if(typeof XDomainRequest!=="undefined"){e=new XDomainRequest}}else{e=new XMLHttpRequest}e.open(n,a,t.async,r.user,r.password);e.withCredentials=t.withCredentials;d(e,t.headers);return e}function E(t,e){var n;var r=g(t);if(!r){return}n=v(r,e);r.onerror=n;r.ontimeout=n;r.onload=y(r,e);try{r.send(t.data)}catch(a){n(a)}}function T(t){return function(t,e,n){var r=c({},o);var u=a.call(arguments);var i,d=null;for(i=0,l=u.length;i<l;i+=1){d=u[i];if(f(d)){n=d}else if(s(d)){c(r,d)}else if(typeof d==="string"){r.url=d}}E(r,n)}}function w(t,e,n){return T("GET").apply(null,arguments)}w.VERSION=e;w.defaults=o;w.get=T("GET");w.post=T("POST");w.put=T("PUT");w.del=T("DELETE");w.patch=T("PATCH");w.head=T("HEAD");n.http=w;if(typeof define==="function"&&define.amd){define(function(){return w})}else{t.lil=n}})(this);